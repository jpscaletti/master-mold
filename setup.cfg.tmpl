[metadata]
name = [[ pypi_name or name ]]
version= [[ version ]]
author = [[ author ]]
author_email = [[ author_email ]]
description = [[ description ]]
long_description = file:README.md
long_description_content_type = text/markdown
url = [% if home_url -%] [[ home_url ]] [%- else -%] https://github.com/[[ repo_name ]] [%- endif %]
[% if project_urls -%]
project_urls =
[%- for name, url in project_urls.items() %]
    [[ name ]] = [[ url ]]
[% endfor %]
[%- endif -%]
license = Apache License Version 2.0
license_file = LICENSE.txt
classifiers =
    Development Status :: [[ development_status ]]
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3


[bdist_wheel]
universal = 1


[options]
include_package_data = true
packages = find:
python_requires = >=[[ minimal_python ]],<4.0
install_requires =
    [[ "\n    ".join(install_requires) ]]

[options.packages.find]
exclude =
    tests

[options.extras_require]
testing =
    [[ "\n    ".join(testing_requires) ]]

dev =
    # Testing & Validation
    [[ "\n    ".join(testing_requires) ]]
    [[ "\n    ".join(development_requires) ]]
[%- if has_docs %]
    # Documentation
    mkdocs
    mkdocs-material
    pymdown-extensions
    pygments
    pygments-github-lexers
[%- endif %]
[% if entry_points %]
[options.entry_points]
console_scripts =
    [[ entry_points ]]
[% endif %]

[flake8]
max-complexity = 10
max-line-length = 110

statistics = true
doctests = True
accept-encodings = utf-8

select = C,E,F,W,B,B950
# W503 line break before binary operator
# E203 whitespace before ':'
# D100  Missing docstring in public module
# D101  Missing docstring in public class
# D102  Missing docstring in public method
# D103  Missing docstring in public function
# D104  Missing docstring in public package
# D105  Missing docstring in magic method
# D107  Missing docstring in __init__
ignore = W503,E203,D100,D101,D102,D103,D104,D105,D107


[tool:pytest]
addopts = --doctest-modules
